/**
  @page Image classification application: food recognition (float C model) 
  
  @verbatim
  ******************** (C) COPYRIGHT 2019 STMicroelectronics *******************
  * @file    FoodReco_MobileNetDerivative/Float_Model/readme.txt 
  * @author  MCD Application Team
  * @brief   Description of the food recognition (float C model) application.
  ******************************************************************************
  * @attention
  *
  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  * All rights reserved.</center></h2>
  *
  * This software component is licensed by ST under Ultimate Liberty license
  * SLA0044, the "License"; You may not use this file except in compliance with
  * the License. You may obtain a copy of the License at:
  *                             www.st.com/SLA0044
  *
  ******************************************************************************
  @endverbatim

@par Application Description

This application demonstrates an example of image classification running on the STM32H7xx devices.
The image classification process is based on a convolutional neural network. The corresponding C model is
generated using X-CUBE-AI v5.0.0 tool.
In this application, the generated C model is a float model, i.e. operating on 32-bit integer.

The application consists in food recognition. The application can recognize among 18 types of foods and drinks 
like pizza, beer, French fries.

This application demonstrates how to make use of the C model generated by X-CUBE-AI v5.0.0 tool. 
It relies on the neural network library provided in STM32_AI Middleware.

This application also relies on:
- The STM32_Image Middleware which provides a set of functions for image preprocessing.
- The STM32_Fs and FatFs Middleware components which provide a set of functions for file management (implemented on FatFs) abstraction over SD interface.

The application has several configurations: each configuration corresponds to a specific layout of the data in volatile memory and a 
specific placement of the weight/bias table in non-volatile memory:
- STM32H747I-DISCO_FoodReco_Float_Ext
- STM32H747I-DISCO_FoodReco_Float_Split 
- STM32H747I-DISCO_FoodReco_Float_Ext_Qspi
- STM32H747I-DISCO_FoodReco_Float_Split_Qspi
- STM32H747I-DISCO_FoodReco_Float_Split_Sdram
- STM32H747I-DISCO_FoodReco_Float_Ext_Sdram

      
For more details about the X-CUBE-AI tool, please refer to UM2526 "Getting started with X-CUBE-AI Expansion Package for Artificial Intelligence (AI)" 

      

@par Directory contents

  - FoodReco_MobileNetDerivative/Float_Model/CM7/Src/main.c                  Main program
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Src/stm32h7xx_it.c          Interrupt handlers
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/ai_interface.c          Abstraction interface to generated C model
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/fp_vision_app.c         Application implementation
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/network.c               Generated C model (neural network's topology)
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/network_data.c          Generated C model (neural network's weights and bias)
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/stm32h7xx_hal_msp.c     HAL MSP for Cortex-M7 core
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/sd_diskio.c             SD interface
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/onboard_validation.c    Validation library 
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/display.c               Display library

  
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/main.h                  Main program header file
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/stm32h7xx_it.h          Interrupt handlers header file
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/stm32h7xx_hal_conf.h    HAL configuration file
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/ai_interface.h          
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/fp_vision_app.h         
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/network.h               
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/network_data.h          
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/sd_diskio.h             SD interface 
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/onboard_validation.h    Validation library 
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/display.h               Display library
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/ffconf.h                
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/food_logos.h            Logos
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/stlogo.h                Logo
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/stm32cubeailogo.h       Logo
  - FoodReco_MobileNetDerivative/Float_Model/CM7/Inc/stm32h7logo.h           Logo


  
@par Hardware and Software environment

  - This application runs on STM32H747xx devices.
    
  - This application has been tested with STMicroelectronics STM32H747I-DISCO RevC 
    Discovery boards and can be easily tailored to any other supported device 
    and development board.
    
  - This application relies on the STM32F4DIS-CAM camera module which has to be connected via a flex cable to the STM32H747I-DISCO board.

  - STM32H747I-Discovery RevC Set-up
    - Power supply and ST-LINK V3 connection: Connect the STM32H747I-DISCO board to the PC through USB cable connected to the connector CN2. 
    
@par How to use it ?

In order to make the program work, you must do the following :
 - Open your preferred toolchain 
 - Select your configuration
 - Rebuild all files and load your image into target memory
 - In the workspace toolbar select the project configuration
 - Run the application
 
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
 